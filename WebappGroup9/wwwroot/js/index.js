$(() => {
    const failDiv = $("#fail");
    
    generateDeparture();

    $("#choose").on("click", () => {
        if ($("#departure").val() === "Choose Departure" || $("#destination").val() === "Choose Departure to see destinations") {
            failDiv.html("Please pick a departure and a destination");
            return;
        }
        failDiv.html("");


        dateQuestion();
        $("#choose").remove();
    });
});


function rowStart(insID) {
    const out =
        "    <div class=\"row m-3 justify-content-center\" id='" + insID + "'>\n" +
        "        <div class=\"col-md-8 card\">\n" +
        "            <form class=\"form card-body\">";
    return out;
}

const rowEnd =
    "            </form>\n" +
    "        </div>\n" +
    "    </div>";


//TODO make things run based on onchange instead of buttons to make it adaptive
//Perhaps add some transitions to make it less jarring

const dateRowId = "dateRow";

//TODO arrival should be generated by route duration
function dateQuestion() {
    //TODO add departure date
    $("#destinationRow").after(
        rowStart(dateRowId) +
        "<h2>Departure and Arrival</h2>" +
        "<div class=\"form-group\">\n" +
        "    <label for=\"dDate\">Departure Date</label>\n" +
        "    <input class=\"form-control\" type=\"date\" id=\"dDate\" />\n" +
        "</div>\n" +
        "<div class=\"form-group\">\n" +
        "    <label for=\"aDate\">Arrival Date</label>\n" +
        "    <input class=\"form-control\" type=\"date\" id=\"aDate\" />\n" +
        "</div>" +
        "<input type=\"button\" id=\"chooseDate\" class=\"btn btn-primary\" value=\"Choose\">\n" +
        "<a type=\"button\" id=\"reset\" class=\"btn btn-danger\" href=\"index.html\">Reset Form</a>\n" +
        rowEnd
    );

    //TODO date validation
    $("#chooseDate").on("click", () => {
        customerAmmountQuestion()
        $("#chooseDate").remove();
        $("#reset").remove();
    });
    
}

function generateDeparture() {
    $.get("BoatLine/GetRoutes", function (routes) {
        let outDeparture = ""
        outDeparture += "<option>Choose Departure</option>";
        let oldDeparture = "";
        let departureArray = []

        for (const r of routes) {
            if (oldDeparture !== r.departure) {
                departureArray.push(r.departure);
            }
            oldDeparture = r.departure;
        }

        for (const m of departureArray) {
            outDeparture += "<option>" + m + "</option>";
        }

        $("#departure").html(outDeparture)

        getDestinations();
    })
        .fail(function (jqXHR) {
            const json = $.parseJSON(jqXHR.responseText);
            // const json = JSON.parse(jqXHR.responseText);
            console.log(json.message);
            failDiv.html(json.message);
        });
}

function getDestinations() {
    $.get("BoatLine/GetRoutes", (routes) => {
        let chosenDeparture = $("#departure").val();
        let outDestination = "";
        //TODO remove this
        console.log(chosenDeparture);

        if (chosenDeparture === "Choose Departure") {
            outDestination += "<option>Choose Departure to see destinations</option>";
        } else {
            outDestination += "<option>Choose destination</option>";
            for (const r of routes) {
                if (chosenDeparture === r.departure) {
                    outDestination += "<option>" + r.destination + "</option>";
                }
            }
        }

        $("#destination").html(outDestination);
    })
        .fail(function (jqXHR) {
            const json = $.parseJSON(jqXHR.responseText);
            console.log(json.message);
            failDiv.html(json.message);
        });
}

//TODO make this better an reflect proper cabins
function getCabins() {
    $.get("BoatLine/GetCabins", (cabins) => {
        let outCabins = "";

        outCabins += "<option>Choose Cabin</option>";
        for (const c of cabins) {
            outCabins += "<option value='" + c.id + "'>" + c.type + "</option>";
        }

        $(".cabininput").html(outCabins);
    })
        .fail(function (jqXHR) {
            const json = $.parseJSON(jqXHR.responseText);
            console.log(json.message);
            failDiv.html(json.message);
        });
}

const cabinRowID = "customerCabinRow";

function customerAmmountQuestion() {
    $("#" + dateRowId + "").after(
rowStart(cabinRowID) +
        "<h2>Customers and Cabins</h2>" +
        "<div class ='form-group'>\n" +
        "    <label for=\"ammountCustomers\">How many will be traveling?</label>\n" +
        "    <input class=\"form-control\" type=\"number\" id=\"ammountCustomers\" onchange=\"validateAmmount()\">\n" +
        "    <div id=\"ammountCustomersError\" style=\"color: red\"></div>\n" +
        "</div>" +
        "<div class ='form-group'>\n" +
        "    <label for=\"ammountCabins\">How many cabins would you like?</label>\n" +
        "    <input class=\"form-control\" type=\"number\" id=\"ammountCabins\" onchange=\"validateAmmount()\">\n" +
        "    <div id=\"ammountCustomersError\" style=\"color: red\"></div>\n" +
        "</div>" +
        "<input type=\"button\" id=\"chooseAmount\" class=\"btn btn-primary\" value=\"Choose\">\n" +
        "<a type=\"button\" id=\"reset\" class=\"btn btn-danger\" href=\"index.html\">Reset Form</a>\n" +
        rowEnd
    );
    
    // needs to have this here no idea why, think it loads the listener into ram or something
    $("#chooseAmount").on("click", () => {
        //TODO Remove these
        console.log("Clicked chooseAmmount")
        console.log($("#ammountCustomers").val());
        
        generateCustomerForm();
    });

}

const customerRowId = "customerRow";
const cabinRowId = "cabinRow"

function generateCustomerForm() {
    //TODO make adaptive ID's
    const custAmmount = 0 + $("#ammountCustomers").val();
    const cabinAmmount = 0 + $("#ammountCabins").val();

    if (custAmmount == 0) {
        $("#fail").html("Please enter more than one customer");
        return;
    }

    if (custAmmount > (24*3*6)){
        $("#fail").html("The boat can't hold this many travelers");
        return;
    }

    if (cabinAmmount == 0) {
        $("#fail").html("Please enter more than one cabin");
        return;
    }

    if (cabinAmmount > (24*3)){
        $("#fail").html("There aren't enough cabins on the boat");
        return;
    }

    if (cabinAmmount > custAmmount){
        $("#fail").html("We do not permit you to have more cabins than customers");
        return;
    }
    // resetting after clearing validation
    $("#fail").html("");

    var outform = "";
    
    //TODO add get postalName based on city
    for (let i = 0; i < custAmmount; i++) {
        outform += 
            rowStart("customerRow" + i) +
            "<h3>Customer " + (i+1) + "</h3>\n" +
            "<div class ='form-group'>\n" +
            "    <label for='" + "firstName" + i + "'>First Name</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "firstName" + i + "' onchange=\"validerNavn()\">\n" +
            "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
            "</div>\n" +
            "<div class ='form-group'>\n" +
            "    <label for='" + "lastName" + i + "'>Last Name</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "lastName" + i + "' onchange=\"validerNavn()\">\n" +
            "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
            "</div>\n" +
            "<div class ='form-group'>\n" +
            "    <label for='" + "address" + i + "'>Address</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "address" + i + "' onchange=\"validerAdresse()\">\n" +
            "    <div id=\"adresseError\" style=\"color: red\"></div>\n" +
            "</div>\n" +
            "<div class ='form-group'>\n" +
            "    <label for='" + "postalCode" + i + "'>Postal Code</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "postalCode" + i + "' onchange=\"validerAdresse()\">\n" +
            "    <div id=\"adresseError\" style=\"color: red\"></div>\n" +
            "</div>\n" +
            "<div class ='form-group'>\n" +
            "    <label for='" + "email" + i + "'>Email</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "email" + i + "' onchange=\"validerNavn()\">\n" +
            "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
            "</div>\n" +
            "<div class=\"form-group\">\n" +
            "    <label for='" + "phone" + i + "'>Phone</label>\n" +
            "    <input class=\"form-control\" type=\"text\" id='" + "phone" + i + "' onchange=\"validerRegNr()\">\n" +
            "    <div id=\"regNrError\" style=\"color: red\"></div>\n" +
            "</div>" +
            rowEnd;
    }

    for (let i = 0; i < cabinAmmount; i++) {
        outform +=
            rowStart(cabinRowID + i) +
            "<h3>Cabin " + (i + 1) + "</h3>\n" +
            "<div class=\"form-group\">\n" +
            "    <label for=\"departure\">Choose Cabin</label>" +
            "    <select class=\"form-control cabininput\" onchange='setCabinPrice( \"" + i + "\")' id='" + "cabinInput" + i + "'></select>\n" +
            "    <div id='" + "cabinPrice" + i + "'></div>\n" +
            // "    <div id='" + "hiddenCabinId" + i + "' class=\"d-none\"></div>\n" +
            "</div>";
        if (i == cabinAmmount - 1) {
            outform +=
                "<input type=\"button\" id=\"chooseCabin\" class=\"btn btn-primary\" value=\"Choose\">\n" +
                "<a type=\"button\" id=\"resetCust\" class=\"btn btn-danger\" href=\"index.html\">Reset Form</a>\n";
        }
        outform += rowEnd;
    }
    
    // Inserting next form and removing previous buttons
    $("#" + cabinRowID +"").after(outform);
    $("#chooseAmount").remove();
    $("#reset").remove();

    getCabins();

    $("#chooseCabin").on("click", () => {
        console.log("Clicked Cabin Button")
        $("#chooseCabin").remove();
        $("#resetCust").remove();
        generatePayment();
    });
}

// need getcabin method that takes in id as string
function setCabinPrice(nr) {
    console.log("onchange input: " + nr);

    const cabinId = $("#cabinInput" + nr + "").val();

    console.log("select value based on input: " + cabinId);

    // $.get("BoatLine/GetCabin?Id=" + cabinId, (cabin) => {
    //     $("#cabinPrice" + nr + "").html(cabin.price);
    // });
}

const paymentRowId = "paymentRowID"
function generatePayment() {
    const outform =
        rowStart(paymentRowId) +
        "<h3>Payment Info</h3>\n" +
        "<div class ='form-group'>\n" +
        "    <label for='cardNumber'>Card Number</label>\n" +
        "    <input class=\"form-control\" type=\"text\" id='cardNumber' onchange=\"validerNavn()\">\n" +
        "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
        "</div>\n" +
        "<div class ='form-group'>\n" +
        "    <label for='csc'>Security Number</label>\n" +
        "    <input class=\"form-control\" type=\"text\" id='csc' onchange=\"validerNavn()\">\n" +
        "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
        "</div>\n" +
        "<div class ='form-group'>\n" +
        "    <label for='cardMonth'>Expiration Month</label>\n" +
        "    <input class=\"form-control\" type=\"text\" id='cardMonth' onchange=\"validerNavn()\">\n" +
        "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
        "</div>\n" +
        "<div class ='form-group'>\n" +
        "    <label for='cardYear'>Expiration year</label>\n" +
        "    <input class=\"form-control\" type=\"text\" id='cardYear' onchange=\"validerNavn()\">\n" +
        "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
        "</div>\n" +
        "<div class ='form-group'>\n" +
        "    <label for='cardholderName'>Cardholder Name</label>\n" +
        "    <input class=\"form-control\" type=\"text\" id='cardholderName' onchange=\"validerNavn()\">\n" +
        "    <div id=\"navnError\" style=\"color: red\"></div>\n" +
        "</div>\n" +
        "<input type=\"button\" id=\"choosePayment\" class=\"btn btn-primary\" value=\"Choose\">\n" +
        "<a type=\"button\" id=\"resetCust\" class=\"btn btn-danger\" href=\"index.html\">Reset Form</a>\n";
        rowEnd;

    $("#endRow").before(outform);

    $("#choosePayment").on("click", () => {
        console.log("Clicked payment Button")
        saveCustomers()
    });
}

//TODO use getRoute to get an accurate route duration
// startime needs to be added, with a selection and static options or something
// figure out how to get more info from the route object i dunno
function saveCustomers() {
    const custAmmount = 0 + $("#ammountCustomers").val();
    const cabinAmmount = 0 + $("#ammountCabins").val();
    for (let i = 0; i < custAmmount; i++) {
        const inCustomer = {
            firstName: $("#firstName" + i + "").val(),
            lastName: $("#lastName" + i + "").val(),
            streetAddress: $("#address" + i + "").val(),
            postalCode: {
                code: $("#postalCode" + i + "").val()
            },
            phone: $("#phone" + i + "").val(),
            email: $("#email" + i + "").val(),
            tickets: [
                {
                    route: {
                        departure: $("#departure").val(),
                        destination: $("#destination").val()
                    },
                    //placeholder untill we get cabinloop working
                    // cabins: [
                    //     {id: $("#cabinInput" + i + "").val()}
                    // ],
                    cabins: [],
                    date: $("#date").val(),
                    //TODO set pickable starttime
                    startTime: "23:45",
                }],

        };

        // Setting only payment for the first customer.
        if (i == 0) {
            inCustomer.payment = {
                cardHolderName: $("#cardholderName").val(),
                    cardNumber: $("#cardNumber").val(),
                    cSC: $("#csc").val(),
                    expirationMonth: $("#cardMonth").val(),
                    expirationYear: $("#cardYear").val()
            }
        }

        for (let j = 0; j < cabinAmmount; j++) {
            inCustomer.tickets[0].cabins[j] = {id: $("#cabinInput" + i + "").val()};
        }

        $.post("BoatLine/SaveOne", inCustomer, (OK) => {
            console.log("Saved customer?")
        });

        testGetCustomers();
    }
}